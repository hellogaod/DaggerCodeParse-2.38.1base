# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app"s APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
#--add-exports=THEIR_MODULE/THEIR_PACKAGE=ALL-UNNAMED
#--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED
# Workaround for Java 16 and spotless bug 834 https://github.com/diffplug/spotless/issues/834

#错误: 程序包 com.sun.tools.javac.code 不可见 (程序包 com.sun.tools.javac.code 已在模块 jdk.compiler 中声明, 但该模块未将它导出到未命名模块)
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 
#--add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
#--add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED